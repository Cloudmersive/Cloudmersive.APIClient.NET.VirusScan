/*
 * virusapi
 *
 * The Cloudmersive Virus Scan API lets you scan files and content for viruses and identify security issues with content.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloudmersive.APIClient.NET.VirusScan.Client.OpenAPIDateConverter;

namespace Cloudmersive.APIClient.NET.VirusScan.Model
{
    /// <summary>
    /// Virus positively identified
    /// </summary>
    [DataContract(Name = "VirusFound")]
    public partial class VirusFound : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VirusFound" /> class.
        /// </summary>
        /// <param name="fileName">Name of the file containing the virus.</param>
        /// <param name="virusName">Name of the virus that was found.</param>
        public VirusFound(string fileName = default(string), string virusName = default(string))
        {
            this.FileName = fileName;
            this.VirusName = virusName;
        }

        /// <summary>
        /// Name of the file containing the virus
        /// </summary>
        /// <value>Name of the file containing the virus</value>
        [DataMember(Name = "FileName", EmitDefaultValue = false)]
        public string FileName { get; set; }

        /// <summary>
        /// Name of the virus that was found
        /// </summary>
        /// <value>Name of the virus that was found</value>
        [DataMember(Name = "VirusName", EmitDefaultValue = false)]
        public string VirusName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VirusFound {\n");
            sb.Append("  FileName: ").Append(FileName).Append("\n");
            sb.Append("  VirusName: ").Append(VirusName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
