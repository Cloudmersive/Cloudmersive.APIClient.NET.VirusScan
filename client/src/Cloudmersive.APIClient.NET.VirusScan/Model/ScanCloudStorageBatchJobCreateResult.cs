/*
 * virusapi
 *
 * The Cloudmersive Virus Scan API lets you scan files and content for viruses and identify security issues with content.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Cloudmersive.APIClient.NET.VirusScan.Client.OpenAPIDateConverter;

namespace Cloudmersive.APIClient.NET.VirusScan.Model
{
    /// <summary>
    /// Result of performing a convert documentbatch job operation
    /// </summary>
    [DataContract(Name = "ScanCloudStorageBatchJobCreateResult")]
    public partial class ScanCloudStorageBatchJobCreateResult : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ScanCloudStorageBatchJobCreateResult" /> class.
        /// </summary>
        /// <param name="successful">True if successful, false otherwise.</param>
        /// <param name="asyncJobID">When creating a job, an Async Job ID is returned.  Use the GetAsyncJobStatus API to check on the status of this job using the AsyncJobID and get the result when it finishes.</param>
        public ScanCloudStorageBatchJobCreateResult(bool successful = default(bool), string asyncJobID = default(string))
        {
            this.Successful = successful;
            this.AsyncJobID = asyncJobID;
        }

        /// <summary>
        /// True if successful, false otherwise
        /// </summary>
        /// <value>True if successful, false otherwise</value>
        [DataMember(Name = "Successful", EmitDefaultValue = true)]
        public bool Successful { get; set; }

        /// <summary>
        /// When creating a job, an Async Job ID is returned.  Use the GetAsyncJobStatus API to check on the status of this job using the AsyncJobID and get the result when it finishes
        /// </summary>
        /// <value>When creating a job, an Async Job ID is returned.  Use the GetAsyncJobStatus API to check on the status of this job using the AsyncJobID and get the result when it finishes</value>
        [DataMember(Name = "AsyncJobID", EmitDefaultValue = false)]
        public string AsyncJobID { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ScanCloudStorageBatchJobCreateResult {\n");
            sb.Append("  Successful: ").Append(Successful).Append("\n");
            sb.Append("  AsyncJobID: ").Append(AsyncJobID).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
