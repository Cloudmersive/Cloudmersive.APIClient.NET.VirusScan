/*
 * virusapi
 *
 * The Cloudmersive Virus Scan API lets you scan files and content for viruses and identify security issues with content.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Cloudmersive.APIClient.NET.VirusScan.Client;
using Cloudmersive.APIClient.NET.VirusScan.Api;
// uncomment below to import models
//using Cloudmersive.APIClient.NET.VirusScan.Model;

namespace Cloudmersive.APIClient.NET.VirusScan.Test.Api
{
    /// <summary>
    ///  Class for testing ScanCloudStorageApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ScanCloudStorageApiTests : IDisposable
    {
        private ScanCloudStorageApi instance;

        public ScanCloudStorageApiTests()
        {
            instance = new ScanCloudStorageApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScanCloudStorageApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ScanCloudStorageApi
            //Assert.IsType<ScanCloudStorageApi>(instance);
        }

        /// <summary>
        /// Test ScanCloudStorageGetAsyncJobStatus
        /// </summary>
        [Fact]
        public void ScanCloudStorageGetAsyncJobStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string asyncJobID = null;
            //var response = instance.ScanCloudStorageGetAsyncJobStatus(asyncJobID);
            //Assert.IsType<ScanCloudStorageJobStatusResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanAwsS3File
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanAwsS3FileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accessKey = null;
            //string secretKey = null;
            //string bucketRegion = null;
            //string bucketName = null;
            //string keyName = null;
            //string roleArn = null;
            //var response = instance.ScanCloudStorageScanAwsS3File(accessKey, secretKey, bucketRegion, bucketName, keyName, roleArn);
            //Assert.IsType<CloudStorageVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanAwsS3FileAdvanced
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanAwsS3FileAdvancedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string accessKey = null;
            //string secretKey = null;
            //string bucketRegion = null;
            //string bucketName = null;
            //string keyName = null;
            //string roleArn = null;
            //bool? allowExecutables = null;
            //bool? allowInvalidFiles = null;
            //bool? allowScripts = null;
            //bool? allowPasswordProtectedFiles = null;
            //bool? allowMacros = null;
            //bool? allowXmlExternalEntities = null;
            //bool? allowInsecureDeserialization = null;
            //bool? allowHtml = null;
            //bool? allowUnsafeArchives = null;
            //bool? allowOleEmbeddedObject = null;
            //bool? allowUnwantedAction = null;
            //string options = null;
            //string restrictFileTypes = null;
            //var response = instance.ScanCloudStorageScanAwsS3FileAdvanced(accessKey, secretKey, bucketRegion, bucketName, keyName, roleArn, allowExecutables, allowInvalidFiles, allowScripts, allowPasswordProtectedFiles, allowMacros, allowXmlExternalEntities, allowInsecureDeserialization, allowHtml, allowUnsafeArchives, allowOleEmbeddedObject, allowUnwantedAction, options, restrictFileTypes);
            //Assert.IsType<CloudStorageAdvancedVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanAzureBlob
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanAzureBlobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string connectionString = null;
            //string containerName = null;
            //string blobPath = null;
            //var response = instance.ScanCloudStorageScanAzureBlob(connectionString, containerName, blobPath);
            //Assert.IsType<CloudStorageVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanAzureBlobAdvanced
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanAzureBlobAdvancedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string connectionString = null;
            //string containerName = null;
            //string blobPath = null;
            //bool? allowExecutables = null;
            //bool? allowInvalidFiles = null;
            //bool? allowScripts = null;
            //bool? allowPasswordProtectedFiles = null;
            //bool? allowMacros = null;
            //bool? allowXmlExternalEntities = null;
            //bool? allowInsecureDeserialization = null;
            //bool? allowHtml = null;
            //bool? allowUnsafeArchives = null;
            //bool? allowOleEmbeddedObject = null;
            //bool? allowUnwantedAction = null;
            //string options = null;
            //string restrictFileTypes = null;
            //var response = instance.ScanCloudStorageScanAzureBlobAdvanced(connectionString, containerName, blobPath, allowExecutables, allowInvalidFiles, allowScripts, allowPasswordProtectedFiles, allowMacros, allowXmlExternalEntities, allowInsecureDeserialization, allowHtml, allowUnsafeArchives, allowOleEmbeddedObject, allowUnwantedAction, options, restrictFileTypes);
            //Assert.IsType<CloudStorageAdvancedVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanAzureBlobAdvancedBatchJob
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanAzureBlobAdvancedBatchJobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string connectionString = null;
            //string containerName = null;
            //string blobPath = null;
            //bool? allowExecutables = null;
            //bool? allowInvalidFiles = null;
            //bool? allowScripts = null;
            //bool? allowPasswordProtectedFiles = null;
            //bool? allowMacros = null;
            //bool? allowXmlExternalEntities = null;
            //bool? allowInsecureDeserialization = null;
            //bool? allowHtml = null;
            //bool? allowUnsafeArchives = null;
            //bool? allowOleEmbeddedObject = null;
            //bool? allowUnwantedAction = null;
            //string options = null;
            //string restrictFileTypes = null;
            //var response = instance.ScanCloudStorageScanAzureBlobAdvancedBatchJob(connectionString, containerName, blobPath, allowExecutables, allowInvalidFiles, allowScripts, allowPasswordProtectedFiles, allowMacros, allowXmlExternalEntities, allowInsecureDeserialization, allowHtml, allowUnsafeArchives, allowOleEmbeddedObject, allowUnwantedAction, options, restrictFileTypes);
            //Assert.IsType<ScanCloudStorageBatchJobCreateResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanGcpStorageFile
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanGcpStorageFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string bucketName = null;
            //string objectName = null;
            //System.IO.Stream jsonCredentialFile = null;
            //var response = instance.ScanCloudStorageScanGcpStorageFile(bucketName, objectName, jsonCredentialFile);
            //Assert.IsType<CloudStorageVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanGcpStorageFileAdvanced
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanGcpStorageFileAdvancedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string bucketName = null;
            //string objectName = null;
            //System.IO.Stream jsonCredentialFile = null;
            //bool? allowExecutables = null;
            //bool? allowInvalidFiles = null;
            //bool? allowScripts = null;
            //bool? allowPasswordProtectedFiles = null;
            //bool? allowMacros = null;
            //bool? allowXmlExternalEntities = null;
            //bool? allowInsecureDeserialization = null;
            //bool? allowHtml = null;
            //bool? allowUnsafeArchives = null;
            //bool? allowOleEmbeddedObject = null;
            //bool? allowUnwantedAction = null;
            //string options = null;
            //string restrictFileTypes = null;
            //var response = instance.ScanCloudStorageScanGcpStorageFileAdvanced(bucketName, objectName, jsonCredentialFile, allowExecutables, allowInvalidFiles, allowScripts, allowPasswordProtectedFiles, allowMacros, allowXmlExternalEntities, allowInsecureDeserialization, allowHtml, allowUnsafeArchives, allowOleEmbeddedObject, allowUnwantedAction, options, restrictFileTypes);
            //Assert.IsType<CloudStorageAdvancedVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanSharePointOnlineFile
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanSharePointOnlineFileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientID = null;
            //string clientSecret = null;
            //string sharepointDomainName = null;
            //string siteID = null;
            //string filePath = null;
            //string tenantID = null;
            //string itemID = null;
            //var response = instance.ScanCloudStorageScanSharePointOnlineFile(clientID, clientSecret, sharepointDomainName, siteID, filePath, tenantID, itemID);
            //Assert.IsType<CloudStorageVirusScanResult>(response);
        }

        /// <summary>
        /// Test ScanCloudStorageScanSharePointOnlineFileAdvanced
        /// </summary>
        [Fact]
        public void ScanCloudStorageScanSharePointOnlineFileAdvancedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientID = null;
            //string clientSecret = null;
            //string sharepointDomainName = null;
            //string siteID = null;
            //string tenantID = null;
            //string filePath = null;
            //string itemID = null;
            //bool? allowExecutables = null;
            //bool? allowInvalidFiles = null;
            //bool? allowScripts = null;
            //bool? allowPasswordProtectedFiles = null;
            //bool? allowMacros = null;
            //bool? allowXmlExternalEntities = null;
            //bool? allowInsecureDeserialization = null;
            //bool? allowHtml = null;
            //bool? allowUnsafeArchives = null;
            //bool? allowOleEmbeddedObject = null;
            //bool? allowUnwantedAction = null;
            //string restrictFileTypes = null;
            //var response = instance.ScanCloudStorageScanSharePointOnlineFileAdvanced(clientID, clientSecret, sharepointDomainName, siteID, tenantID, filePath, itemID, allowExecutables, allowInvalidFiles, allowScripts, allowPasswordProtectedFiles, allowMacros, allowXmlExternalEntities, allowInsecureDeserialization, allowHtml, allowUnsafeArchives, allowOleEmbeddedObject, allowUnwantedAction, restrictFileTypes);
            //Assert.IsType<CloudStorageAdvancedVirusScanResult>(response);
        }
    }
}
